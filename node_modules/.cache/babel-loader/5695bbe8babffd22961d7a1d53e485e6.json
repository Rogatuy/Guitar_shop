{"ast":null,"code":"var _jsxFileName = \"C:\\\\HTMLacademy\\\\League_A\\\\Greyd\\\\Guitar_shop\\\\src\\\\pages\\\\main\\\\components\\\\pagination\\\\pagination.tsx\";\nimport { FIRST_INDEX_PAGINATION, GUITAR_STEP, LAST_INDEX_PAGINATION } from '../../../../const';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination(_ref) {\n  let {\n    guitars,\n    onPaginateChange,\n    currentPage,\n    onPaginateBack,\n    onPaginateForward\n  } = _ref;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(guitars.length / GUITAR_STEP); i++) {\n    pageNumbers.push(i);\n  }\n\n  const firstIndexPagination = pageNumbers[FIRST_INDEX_PAGINATION];\n  const lastIndexPagination = pageNumbers[pageNumbers.length + LAST_INDEX_PAGINATION];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination page-content__pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination__list\",\n      children: [currentPage !== firstIndexPagination ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pagination__page pagination__page--prev\",\n        id: \"prev\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link pagination__page-link\",\n          onClick: () => onPaginateBack(currentPage),\n          to: \"#\",\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : '', pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage === number ? 'pagination__page pagination__page--active' : 'pagination__page',\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link pagination__page-link\",\n          to: \"#\",\n          onClick: () => onPaginateChange(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)), currentPage !== lastIndexPagination ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pagination__page pagination__page--next\",\n        id: \"next\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link pagination__page-link\",\n          to: \"#\",\n          onClick: () => onPaginateForward(currentPage),\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/HTMLacademy/League_A/Greyd/Guitar_shop/src/pages/main/components/pagination/pagination.tsx"],"names":["FIRST_INDEX_PAGINATION","GUITAR_STEP","LAST_INDEX_PAGINATION","Link","Pagination","guitars","onPaginateChange","currentPage","onPaginateBack","onPaginateForward","pageNumbers","i","Math","ceil","length","push","firstIndexPagination","lastIndexPagination","map","number"],"mappings":";AACA,SAAQA,sBAAR,EAAgCC,WAAhC,EAA6CC,qBAA7C,QAAyE,mBAAzE;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAWA,SAASC,UAAT,OAAgI;AAAA,MAA5G;AAACC,IAAAA,OAAD;AAAUC,IAAAA,gBAAV;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,cAAzC;AAAyDC,IAAAA;AAAzD,GAA4G;AAG9H,QAAMC,WAAsB,GAAG,EAA/B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUR,OAAO,CAACS,MAAR,GAAiBb,WAA3B,CAArB,EAA8DU,CAAC,EAA/D,EAAoE;AAClED,IAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AAED,QAAMK,oBAAoB,GAAGN,WAAW,CAACV,sBAAD,CAAxC;AACA,QAAMiB,mBAAmB,GAAGP,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqBZ,qBAAtB,CAAvC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,iBACGK,WAAW,KAAKS,oBAAhB,gBAEC;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAwD,QAAA,EAAE,EAAC,MAA3D;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAA6C,UAAA,OAAO,EAAE,MAAKR,cAAc,CAACD,WAAD,CAAzE;AAAwF,UAAA,EAAE,EAAC,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,GAKG,EANN,EAQGG,WAAW,CAACQ,GAAZ,CAAiBC,MAAD,iBACf;AAAI,QAAA,SAAS,EAAEZ,WAAW,KAAKY,MAAhB,GAAyB,2CAAzB,GAAuE,kBAAtF;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAA6C,UAAA,EAAE,EAAC,GAAhD;AAAoD,UAAA,OAAO,EAAE,MAAKb,gBAAgB,CAACa,MAAD,CAAlF;AAAA,oBAA6FA;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF,SAA+GA,MAA/G;AAAA;AAAA;AAAA;AAAA,cADD,CARH,EAcGZ,WAAW,KAAKU,mBAAhB,gBACG;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAwD,QAAA,EAAE,EAAC,MAA3D;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAA6C,UAAA,EAAE,EAAC,GAAhD;AAAoD,UAAA,OAAO,EAAE,MAAKR,iBAAiB,CAACF,WAAD,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADH,GAGG,EAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KAlCQH,U;AAoCT,eAAeA,UAAf","sourcesContent":["import { Guitars } from '../../../../types/guitar';\r\nimport {FIRST_INDEX_PAGINATION, GUITAR_STEP, LAST_INDEX_PAGINATION} from '../../../../const';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ntype PaginationProps = {\r\n  guitars: Guitars;\r\n  onPaginateChange: (number: number) => void;\r\n  onPaginateBack: (number: number) => void;\r\n  onPaginateForward: (number: number) => void;\r\n  currentPage: number;\r\n}\r\n\r\nfunction Pagination({guitars, onPaginateChange, currentPage, onPaginateBack, onPaginateForward} : PaginationProps): JSX.Element {\r\n\r\n\r\n  const pageNumbers: number [] = [];\r\n  for (let i = 1; i <= Math.ceil(guitars.length / GUITAR_STEP); i++ ) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const firstIndexPagination = pageNumbers[FIRST_INDEX_PAGINATION];\r\n  const lastIndexPagination = pageNumbers[pageNumbers.length + LAST_INDEX_PAGINATION];\r\n\r\n  return (\r\n    <div className=\"pagination page-content__pagination\">\r\n      <ul className=\"pagination__list\">\r\n        {currentPage !== firstIndexPagination\r\n          ?\r\n          <li className=\"pagination__page pagination__page--prev\" id=\"prev\">\r\n            <Link className=\"link pagination__page-link\" onClick={()=> onPaginateBack(currentPage)} to=\"#\">Назад</Link>\r\n          </li>\r\n          : ''}\r\n\r\n        {pageNumbers.map((number) => (\r\n          <li className={currentPage === number ? 'pagination__page pagination__page--active' : 'pagination__page'} key={number}>\r\n            <Link className=\"link pagination__page-link\" to=\"#\" onClick={()=> onPaginateChange(number)}>{number}</Link>\r\n          </li>\r\n        ))}\r\n\r\n        {currentPage !== lastIndexPagination\r\n          ? <li className=\"pagination__page pagination__page--next\" id=\"next\">\r\n            <Link className=\"link pagination__page-link\" to=\"#\" onClick={()=> onPaginateForward(currentPage)}>Далее</Link></li>\r\n          : ''}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}