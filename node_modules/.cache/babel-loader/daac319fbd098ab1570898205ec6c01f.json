{"ast":null,"code":"var _jsxFileName = \"C:\\\\HTMLacademy\\\\League_A\\\\Greyd\\\\Guitar_shop\\\\src\\\\components\\\\app\\\\app.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate } from 'react-router-dom';\nimport { Routes, Route } from 'react-router-dom';\nimport browserHistory from '../../browser-history';\nimport { AppRoute } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport GuitarFull from '../../pages/guitar-full/guitar-full';\nimport MainPage from '../../pages/main/main';\nimport NotFoundScreen from '../../pages/not-found-screen/not-found-screen';\nimport { getGuitarsLoadedDataStatus } from '../../store/guitars-data/selectors';\nimport { getServerStatus } from '../../store/server-status/selectors';\nimport HistoryRouter from '../history-route/history-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport ServerErorMessage from '../server-error-message/server-error-message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isGuitarsLoaded = useAppSelector(getGuitarsLoadedDataStatus);\n  const serverDataLoadingSattus = useAppSelector(getServerStatus);\n\n  if (!isGuitarsLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!serverDataLoadingSattus) {\n    return /*#__PURE__*/_jsxDEV(ServerErorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HistoryRouter, {\n    history: browserHistory,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.Main,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/page_1\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"page_:idPag\",\n          element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AppRoute.Guitar,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(GuitarFull, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(GuitarFull, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFoundScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nL40NOle0WadndLK47NJGUkUUC0=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/HTMLacademy/League_A/Greyd/Guitar_shop/src/components/app/app.tsx"],"names":["Navigate","Routes","Route","browserHistory","AppRoute","useAppSelector","GuitarFull","MainPage","NotFoundScreen","getGuitarsLoadedDataStatus","getServerStatus","HistoryRouter","LoadingScreen","ServerErorMessage","App","isGuitarsLoaded","serverDataLoadingSattus","Main","Guitar"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,SAASC,0BAAT,QAA2C,oCAA3C;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;;;AAEA,SAASC,GAAT,GAA4B;AAAA;;AAC1B,QAAMC,eAAe,GAAGV,cAAc,CAACI,0BAAD,CAAtC;AACA,QAAMO,uBAAuB,GAAGX,cAAc,CAACK,eAAD,CAA9C;;AAEA,MAAI,CAACK,eAAL,EAAsB;AACpB,wBACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAI,CAACC,uBAAL,EAA8B;AAC5B,wBACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,OAAO,EAAEb,cAAxB;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEC,QAAQ,CAACa,IAAtB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,OAAO,MAAjB;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEb,QAAQ,CAACc,MAAtB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,KAAZ;AAAkB,UAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApCQJ,G;UACiBT,c,EACQA,c;;;KAFzBS,G;AAsCT,eAAeA,GAAf","sourcesContent":["import { Navigate } from 'react-router-dom';\nimport {Routes, Route} from 'react-router-dom';\nimport browserHistory from '../../browser-history';\nimport { AppRoute } from '../../const';\nimport { useAppSelector } from '../../hooks';\nimport GuitarFull from '../../pages/guitar-full/guitar-full';\nimport MainPage from '../../pages/main/main';\nimport NotFoundScreen from '../../pages/not-found-screen/not-found-screen';\nimport { getGuitarsLoadedDataStatus } from '../../store/guitars-data/selectors';\nimport { getServerStatus } from '../../store/server-status/selectors';\nimport HistoryRouter from '../history-route/history-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport ServerErorMessage from '../server-error-message/server-error-message';\n\nfunction App(): JSX.Element {\n  const isGuitarsLoaded = useAppSelector(getGuitarsLoadedDataStatus);\n  const serverDataLoadingSattus = useAppSelector(getServerStatus);\n\n  if (!isGuitarsLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  if (!serverDataLoadingSattus) {\n    return (\n      <ServerErorMessage />\n    );\n  }\n\n  return (\n    <HistoryRouter history={browserHistory}>\n      <Routes>\n        <Route path={AppRoute.Main}>\n          <Route index element={<MainPage />} />\n          <Route path='/page_1' element={<Navigate replace to='/' />} />\n          <Route path='page_:idPag' element={<MainPage />} />\n        </Route>\n\n        <Route path={AppRoute.Guitar}>\n          <Route index element={<GuitarFull />} />\n          <Route path=':id' element={<GuitarFull />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<NotFoundScreen />}\n        />\n      </Routes>\n    </HistoryRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}