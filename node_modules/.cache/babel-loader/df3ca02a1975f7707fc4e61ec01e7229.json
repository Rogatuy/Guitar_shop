{"ast":null,"code":"import{MAX_RATING,ratingToText}from'./const';export var convertRatingToText=function convertRatingToText(ratingNumber){var wholeRating=Math.round(ratingNumber);switch(wholeRating){case ratingToText.VeryBad:return'Очень плохо';case ratingToText.Bad:return'Плохо';case ratingToText.Normal:return'Удовлетворительно';case ratingToText.Good:return'Хорошо';case ratingToText.VeryGood:return'Отлично';}};export var convertTypeGuitarToText=function convertTypeGuitarToText(typeGuitar){switch(typeGuitar){case'electric':return'Электрическая';case'acoustic':return'Акустическая';case'ukulele':return'Укулеле';}};export var getRatingAttributes=function getRatingAttributes(rating){var ratingAttributes=[];ratingAttributes.length=MAX_RATING;for(var i=0;i<ratingAttributes.length;i++){if(i<rating){ratingAttributes[i]=true;}else{ratingAttributes[i]=false;}}return ratingAttributes;};export var getSortComment=function getSortComment(comments){return comments.slice().sort(function(a,b){return Date.parse(b.createAt)-Date.parse(a.createAt);});};export var scrollOnTop=function scrollOnTop(){window.scrollTo({top:0,behavior:'smooth'});};export var isNumber=function isNumber(value){return value!==null&&!isNaN(Number(value.toString()))&&value!==undefined;};","map":{"version":3,"sources":["C:/HTMLacademy/League_A/Greyd/Guitar_shop/src/utils.ts"],"names":["MAX_RATING","ratingToText","convertRatingToText","ratingNumber","wholeRating","Math","round","VeryBad","Bad","Normal","Good","VeryGood","convertTypeGuitarToText","typeGuitar","getRatingAttributes","rating","ratingAttributes","length","i","getSortComment","comments","slice","sort","a","b","Date","parse","createAt","scrollOnTop","window","scrollTo","top","behavior","isNumber","value","isNaN","Number","toString","undefined"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,YAArB,KAAwC,SAAxC,CAIA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAEC,YAAF,CAA2B,CAC5D,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWH,YAAX,CAApB,CACA,OAAQC,WAAR,EACE,IAAKH,CAAAA,YAAY,CAACM,OAAlB,CACE,MAAO,aAAP,CACF,IAAKN,CAAAA,YAAY,CAACO,GAAlB,CACE,MAAO,OAAP,CACF,IAAKP,CAAAA,YAAY,CAACQ,MAAlB,CACE,MAAO,mBAAP,CACF,IAAKR,CAAAA,YAAY,CAACS,IAAlB,CACE,MAAO,QAAP,CACF,IAAKT,CAAAA,YAAY,CAACU,QAAlB,CACE,MAAO,SAAP,CAVJ,CAYD,CAdM,CAgBP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAEC,UAAF,CAAyB,CAC9D,OAAQA,UAAR,EACE,IAAK,UAAL,CACE,MAAO,eAAP,CACF,IAAK,UAAL,CACE,MAAO,cAAP,CACF,IAAK,SAAL,CACE,MAAO,SAAP,CANJ,CAQD,CATM,CAWP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAEC,MAAF,CAAqB,CACtD,GAAMC,CAAAA,gBAAgB,CAAG,EAAzB,CACAA,gBAAgB,CAACC,MAAjB,CAA0BjB,UAA1B,CACA,IAAK,GAAIkB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,gBAAgB,CAACC,MAArC,CAA6CC,CAAC,EAA9C,CAAkD,CAChD,GAAKA,CAAC,CAAGH,MAAT,CAAiB,CACfC,gBAAgB,CAACE,CAAD,CAAhB,CAAsB,IAAtB,CACD,CAFD,IAEO,CACLF,gBAAgB,CAACE,CAAD,CAAhB,CAAsB,KAAtB,CACD,CACF,CACD,MAAOF,CAAAA,gBAAP,CACD,CAXM,CAaP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,QAAwBA,CAAAA,QAAQ,CAACC,KAAT,GAAiBC,IAAjB,CAAsB,SAACC,CAAD,CAAIC,CAAJ,QAAUC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,QAAb,EAAyBF,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,QAAb,CAAnC,EAAtB,CAAxB,EAAvB,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/BC,MAAM,CAACC,QAAP,CAAgB,CACdC,GAAG,CAAE,CADS,CAEdC,QAAQ,CAAE,QAFI,CAAhB,EAID,CALM,CAOP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,QACpBA,CAAAA,KAAK,GAAK,IAAX,EAAoB,CAACC,KAAK,CAACC,MAAM,CAACF,KAAK,CAACG,QAAN,EAAD,CAAP,CAA1B,EAAyDH,KAAK,GAAKI,SAD9C,EAAjB","sourcesContent":["import { MAX_RATING, ratingToText} from './const';\r\nimport { Comments } from './types/comments';\r\n\r\n\r\nexport const convertRatingToText = ( ratingNumber: number) => {\r\n  const wholeRating = Math.round(ratingNumber);\r\n  switch (wholeRating) {\r\n    case ratingToText.VeryBad :\r\n      return 'Очень плохо';\r\n    case ratingToText.Bad :\r\n      return 'Плохо';\r\n    case ratingToText.Normal :\r\n      return 'Удовлетворительно';\r\n    case ratingToText.Good :\r\n      return 'Хорошо';\r\n    case ratingToText.VeryGood :\r\n      return 'Отлично';\r\n  }\r\n};\r\n\r\nexport const convertTypeGuitarToText = ( typeGuitar: string) => {\r\n  switch (typeGuitar) {\r\n    case 'electric' :\r\n      return 'Электрическая';\r\n    case 'acoustic' :\r\n      return 'Акустическая';\r\n    case 'ukulele' :\r\n      return 'Укулеле';\r\n  }\r\n};\r\n\r\nexport const getRatingAttributes = ( rating: number) => {\r\n  const ratingAttributes = [];\r\n  ratingAttributes.length = MAX_RATING;\r\n  for (let i = 0; i < ratingAttributes.length; i++) {\r\n    if ( i < rating) {\r\n      ratingAttributes[i] = true;\r\n    } else {\r\n      ratingAttributes[i] = false;\r\n    }\r\n  }\r\n  return ratingAttributes;\r\n};\r\n\r\nexport const getSortComment = (comments: Comments) => comments.slice().sort((a, b) => Date.parse(b.createAt) - Date.parse(a.createAt));\r\n\r\nexport const scrollOnTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport const isNumber = (value: string | number ): boolean =>\r\n  ((value !== null) && !isNaN(Number(value.toString())) && (value !== undefined));\r\n"]},"metadata":{},"sourceType":"module"}