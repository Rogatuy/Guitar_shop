{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api, store } from '.';\nimport { APIRoute } from '../const';\nimport { errorHandle } from '../services/error-handle';\nimport { loadComments, toggleLoaderComments } from './comments-data/comments-data';\nimport { loadGuitarFull, toggleLoaderGuitarFull } from './guitar-full-data/guitar-full-data';\nimport { loadGuitars } from './guitars-data/guitars-data';\nexport const fetchGuitarsAction = createAsyncThunk('data/fetchGuitars', async () => {\n  try {\n    const {\n      data\n    } = await api.get(APIRoute.Guitars);\n    store.dispatch(loadGuitars(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});\nexport const fetchFullGuitarAction = createAsyncThunk('data/fetchFullGuitar', async id => {\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.FullGuitar}/${id}`);\n    store.dispatch(loadGuitarFull(data));\n  } catch (error) {\n    errorHandle(error);\n    store.dispatch(toggleLoaderGuitarFull());\n  }\n});\nexport const fetchCommentsAction = createAsyncThunk('data/fetchComments', async id => {\n  try {\n    const {\n      data\n    } = await api.get(`${APIRoute.FullGuitar}/${id}/comments`);\n    store.dispatch(loadComments(data));\n  } catch (error) {\n    errorHandle(error);\n    store.dispatch(toggleLoaderComments(true));\n  }\n});","map":{"version":3,"sources":["C:/HTMLacademy/League_A/Greyd/Guitar_shop/src/store/api-actions.ts"],"names":["createAsyncThunk","api","store","APIRoute","errorHandle","loadComments","toggleLoaderComments","loadGuitarFull","toggleLoaderGuitarFull","loadGuitars","fetchGuitarsAction","data","get","Guitars","dispatch","error","fetchFullGuitarAction","id","FullGuitar","fetchCommentsAction"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,GAA3B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAGA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,+BAAnD;AACA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,qCAAvD;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAO,MAAMC,kBAAkB,GAAGV,gBAAgB,CAChD,mBADgD,EAEhD,YAAY;AACV,MAAI;AACF,UAAM;AAACW,MAAAA;AAAD,QAAS,MAAMV,GAAG,CAACW,GAAJ,CAAiBT,QAAQ,CAACU,OAA1B,CAArB;AACAX,IAAAA,KAAK,CAACY,QAAN,CAAeL,WAAW,CAACE,IAAD,CAA1B;AACD,GAHD,CAGE,OAAMI,KAAN,EAAa;AACbX,IAAAA,WAAW,CAACW,KAAD,CAAX;AACD;AACF,CAT+C,CAA3C;AAYP,OAAO,MAAMC,qBAAqB,GAAGhB,gBAAgB,CACnD,sBADmD,EAEnD,MAAOiB,EAAP,IAAsB;AACpB,MAAI;AACF,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMV,GAAG,CAACW,GAAJ,CAAiB,GAAET,QAAQ,CAACe,UAAW,IAAGD,EAAG,EAA7C,CAArB;AACAf,IAAAA,KAAK,CAACY,QAAN,CAAeP,cAAc,CAACI,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdX,IAAAA,WAAW,CAACW,KAAD,CAAX;AACAb,IAAAA,KAAK,CAACY,QAAN,CAAeN,sBAAsB,EAArC;AACD;AACF,CAVkD,CAA9C;AAaP,OAAO,MAAMW,mBAAmB,GAAGnB,gBAAgB,CACjD,oBADiD,EAEjD,MAAOiB,EAAP,IAA6B;AAC3B,MAAI;AACF,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMV,GAAG,CAACW,GAAJ,CAAmB,GAAET,QAAQ,CAACe,UAAW,IAAGD,EAAG,WAA/C,CAArB;AACAf,IAAAA,KAAK,CAACY,QAAN,CAAeT,YAAY,CAACM,IAAD,CAA3B;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdX,IAAAA,WAAW,CAAEW,KAAF,CAAX;AACAb,IAAAA,KAAK,CAACY,QAAN,CAAeR,oBAAoB,CAAC,IAAD,CAAnC;AACD;AACF,CAVgD,CAA5C","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { api, store } from '.';\r\nimport { APIRoute } from '../const';\r\nimport { errorHandle } from '../services/error-handle';\r\nimport { Comments } from '../types/comments';\r\nimport { Guitar, Guitars } from '../types/guitar';\r\nimport { loadComments, toggleLoaderComments } from './comments-data/comments-data';\r\nimport { loadGuitarFull, toggleLoaderGuitarFull } from './guitar-full-data/guitar-full-data';\r\nimport { loadGuitars } from './guitars-data/guitars-data';\r\n\r\n\r\nexport const fetchGuitarsAction = createAsyncThunk(\r\n  'data/fetchGuitars',\r\n  async () => {\r\n    try {\r\n      const {data} = await api.get<Guitars>(APIRoute.Guitars);\r\n      store.dispatch(loadGuitars(data));\r\n    } catch(error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchFullGuitarAction = createAsyncThunk(\r\n  'data/fetchFullGuitar',\r\n  async (id: number) => {\r\n    try {\r\n      const {data} = await api.get<Guitar>(`${APIRoute.FullGuitar}/${id}`);\r\n      store.dispatch(loadGuitarFull(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n      store.dispatch(toggleLoaderGuitarFull());\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchCommentsAction = createAsyncThunk(\r\n  'data/fetchComments',\r\n  async (id: number | null) => {\r\n    try {\r\n      const {data} = await api.get<Comments>(`${APIRoute.FullGuitar}/${id}/comments`);\r\n      store.dispatch(loadComments(data));\r\n    } catch (error) {\r\n      errorHandle (error);\r\n      store.dispatch(toggleLoaderComments(true));\r\n    }\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}