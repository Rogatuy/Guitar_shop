{"ast":null,"code":"var _jsxFileName = \"C:\\\\HTMLacademy\\\\League_A\\\\Greyd\\\\Guitar_shop\\\\src\\\\components\\\\rating-stars\\\\rating-stars.tsx\";\nimport { MAX_RATING } from '../../const';\nimport { convertRatingToText } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FilledStar() {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"12\",\n    height: \"11\",\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"use\", {\n      xlinkHref: \"#icon-full-star\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FilledStar;\n\nfunction EmptyStar() {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"12\",\n    height: \"11\",\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"use\", {\n      xlinkHref: \"#icon-star\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = EmptyStar;\n\nconst starsComponent = rating => {\n  const wholeRating = Math.round(rating);\n  const filledStars = [];\n  const emptyStars = [];\n\n  for (let i = 0; i < wholeRating; i++) {\n    filledStars.push(i);\n  }\n\n  for (let i = 0; i < MAX_RATING - wholeRating; i++) {\n    emptyStars.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [filledStars.map(i => /*#__PURE__*/_jsxDEV(FilledStar, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), emptyStars.map(i => /*#__PURE__*/_jsxDEV(EmptyStar, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\nfunction RatingStars(_ref) {\n  let {\n    rating,\n    commentsCount\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-card__info\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rate product-card__rate\",\n      children: [starsComponent(rating), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"visually-hidden\",\n        children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433:\", convertRatingToText(rating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), commentsCount ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rate__count\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0446\\u0435\\u043D\\u043E\\u043A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 53\n        }, this), commentsCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = RatingStars;\nexport default RatingStars;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilledStar\");\n$RefreshReg$(_c2, \"EmptyStar\");\n$RefreshReg$(_c3, \"RatingStars\");","map":{"version":3,"sources":["C:/HTMLacademy/League_A/Greyd/Guitar_shop/src/components/rating-stars/rating-stars.tsx"],"names":["MAX_RATING","convertRatingToText","FilledStar","EmptyStar","starsComponent","rating","wholeRating","Math","round","filledStars","emptyStars","i","push","map","RatingStars","commentsCount"],"mappings":";AACA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,mBAAT,QAAoC,aAApC;;;;AAOA,SAASC,UAAT,GAAoC;AAClC,sBACE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAA4B,mBAAY,MAAxC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;KALQA,U;;AAOT,SAASC,SAAT,GAAmC;AACjC,sBACE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAA4B,mBAAY,MAAxC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;MALQA,S;;AAQT,MAAMC,cAAc,GAAIC,MAAD,IAAoB;AACzC,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAApB;AACA,QAAMI,WAAW,GAAG,EAApB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAApB,EAAiCK,CAAC,EAAlC,EAAsC;AACpCF,IAAAA,WAAW,CAACG,IAAZ,CAAiBD,CAAjB;AACD;;AACD,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIX,UAAU,GAAGM,WAAlC,EAAgDK,CAAC,EAAjD,EAAqD;AACnDD,IAAAA,UAAU,CAACE,IAAX,CAAgBD,CAAhB;AACD;;AAGD,sBACE;AAAA,eACGF,WAAW,CAACI,GAAZ,CAAiBF,CAAD,iBACf,QAAC,UAAD,MACSA,CADT;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAMGD,UAAU,CAACG,GAAX,CAAgBF,CAAD,iBACd,QAAC,SAAD,MACSA,CADT;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA,kBADF;AAcD,CA1BD;;AA4BA,SAASG,WAAT,OAA6E;AAAA,MAAxD;AAACT,IAAAA,MAAD;AAASU,IAAAA;AAAT,GAAwD;AAE3E,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,iBACGX,cAAc,CAACC,MAAD,CADjB,eAEE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kEAAwCJ,mBAAmB,CAACI,MAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGU,aAAa,gBAAG;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,gCAA2B;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,EAAkFA,aAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA0G,EAH1H;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAXQD,W;AAaT,eAAeA,WAAf","sourcesContent":["import { Key } from 'react';\r\nimport { MAX_RATING } from '../../const';\r\nimport { convertRatingToText } from '../../utils';\r\n\r\ntype RatingStarsProps = {\r\n    rating: number;\r\n    commentsCount?: number;\r\n  };\r\n\r\nfunction FilledStar(): JSX.Element  {\r\n  return (\r\n    <svg width=\"12\" height=\"11\" aria-hidden=\"true\">\r\n      <use xlinkHref=\"#icon-full-star\"></use>\r\n    </svg>);\r\n}\r\n\r\nfunction EmptyStar(): JSX.Element  {\r\n  return (\r\n    <svg width=\"12\" height=\"11\" aria-hidden=\"true\">\r\n      <use xlinkHref=\"#icon-star\"></use>\r\n    </svg>);\r\n}\r\n\r\n\r\nconst starsComponent = (rating: number) => {\r\n  const wholeRating = Math.round(rating);\r\n  const filledStars = [];\r\n  const emptyStars = [];\r\n  for (let i = 0; i < wholeRating; i++) {\r\n    filledStars.push(i);\r\n  }\r\n  for (let i = 0; i < (MAX_RATING - wholeRating); i++) {\r\n    emptyStars.push(i);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {filledStars.map((i: Key | null | undefined) => (\r\n        <FilledStar\r\n          key = {i}\r\n        />\r\n      ))}\r\n      {emptyStars.map((i: Key | null | undefined) => (\r\n        <EmptyStar\r\n          key = {i}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction RatingStars({rating, commentsCount}: RatingStarsProps): JSX.Element {\r\n\r\n  return (\r\n    <div className=\"product-card__info\">\r\n      <div className=\"rate product-card__rate\">\r\n        {starsComponent(rating)}\r\n        <p className=\"visually-hidden\">Рейтинг:{convertRatingToText(rating)}</p>\r\n        {commentsCount ? <p className=\"rate__count\"><span className=\"visually-hidden\">Всего оценок:</span>{commentsCount}</p> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatingStars;\r\n\r\n"]},"metadata":{},"sourceType":"module"}